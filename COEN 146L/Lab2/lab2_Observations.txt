//Name: Gagan Gupta 
//Date: 10/01/20
//Title: COEN 146L - Lab 2

Step 1:
	This program creates n threads (where n is the number of rows in the fianl matrixC),
	and uses each thread to calculate 1 row of matrixC in the threads start routine.

Step 2:
	system("netstat -a");
		This displays the state of all active sockets
	system("ifconfig -a");
		This displays the state of all networks interfaces
	system("hostname");
		This displays hostname of the system
	system("ping www.cnn.com -c 5");
		This pings the www.cnn.com address 5 times
	system("traceroute www.cnn.com");
		This displays the route packets trace to www.cnn.com
	system("telnet 192.168.1.1 443");
		This establishes a remote connection to 192.168.1.1 at port 443
	system("host www.cnn.com");
		This performs DNS lookups for www.cnn.com
	system("dig");
		This also performs DNS lookups for www.cnn.com
	system("route");
		This manipulates network routing tables
	system("arp");
		This displays and modifies the Internet-to-Ethernet address translation tables
	
	We tested each Network command to see the use and the content of each command.

Step 3:
	Pinging North America
	PING turner-tls.map.fastly.net (151.101.189.67) 32(60) bytes of data.
	40 bytes from 151.101.189.67 (151.101.189.67): icmp_seq=1 ttl=58 time=14.9 ms
	40 bytes from 151.101.189.67 (151.101.189.67): icmp_seq=2 ttl=58 time=14.9 ms
	40 bytes from 151.101.189.67 (151.101.189.67): icmp_seq=3 ttl=58 time=14.9 ms

	--- turner-tls.map.fastly.net ping statistics ---
	3 packets transmitted, 3 received, 0% packet loss, time 2002ms
	rtt min/avg/max/mdev = 14.905/14.907/14.908/0.001 ms
	PING turner-tls.map.fastly.net (151.101.189.67) 524(552) bytes of data.
	532 bytes from 151.101.189.67 (151.101.189.67): icmp_seq=1 ttl=58 time=15.2 ms
	532 bytes from 151.101.189.67 (151.101.189.67): icmp_seq=2 ttl=58 time=15.4 ms
	532 bytes from 151.101.189.67 (151.101.189.67): icmp_seq=3 ttl=58 time=15.1 ms

	--- turner-tls.map.fastly.net ping statistics ---
	3 packets transmitted, 3 received, 0% packet loss, time 2002ms
	rtt min/avg/max/mdev = 15.196/15.303/15.443/0.103 ms
	PING turner-tls.map.fastly.net (151.101.189.67) 1048(1076) bytes of data.
	1056 bytes from 151.101.189.67 (151.101.189.67): icmp_seq=1 ttl=58 time=15.4 ms
	1056 bytes from 151.101.189.67 (151.101.189.67): icmp_seq=2 ttl=58 time=15.4 ms
	1056 bytes from 151.101.189.67 (151.101.189.67): icmp_seq=3 ttl=58 time=15.5 ms

	--- turner-tls.map.fastly.net ping statistics ---
	3 packets transmitted, 3 received, 0% packet loss, time 2002ms
	rtt min/avg/max/mdev = 15.445/15.474/15.509/0.026 ms
	Pinging Asia
	PING baidu.com (220.181.38.148) 32(60) bytes of data.
	40 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=2 ttl=48 time=186 ms
	40 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=3 ttl=48 time=188 ms

	--- baidu.com ping statistics ---
	3 packets transmitted, 2 received, 33% packet loss, time 2001ms
	rtt min/avg/max/mdev = 186.835/187.462/188.090/0.762 ms
	PING baidu.com (220.181.38.148) 524(552) bytes of data.
	532 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=1 ttl=48 time=187 ms
	532 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=2 ttl=48 time=187 ms
	532 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=3 ttl=48 time=188 ms

	--- baidu.com ping statistics ---
	3 packets transmitted, 3 received, 0% packet loss, time 2001ms
	rtt min/avg/max/mdev = 187.129/187.613/188.070/0.522 ms
	PING baidu.com (39.156.69.79) 1048(1076) bytes of data.
	1056 bytes from 39.156.69.79 (39.156.69.79): icmp_seq=1 ttl=43 time=213 ms
	1056 bytes from 39.156.69.79 (39.156.69.79): icmp_seq=3 ttl=43 time=213 ms

	--- baidu.com ping statistics ---
	3 packets transmitted, 2 received, 33% packet loss, time 2002ms
	rtt min/avg/max/mdev = 213.000/213.190/213.381/0.499 ms
	Pinging Europe
	PING www.giz.de (193.97.170.57) 32(60) bytes of data.
	40 bytes from vm-topas.giz.de (193.97.170.57): icmp_seq=1 ttl=109 time=163 ms
	40 bytes from vm-topas.giz.de (193.97.170.57): icmp_seq=2 ttl=109 time=161 ms
	40 bytes from vm-topas.giz.de (193.97.170.57): icmp_seq=3 ttl=109 time=159 ms

	--- www.giz.de ping statistics ---
	3 packets transmitted, 3 received, 0% packet loss, time 2001ms
	rtt min/avg/max/mdev = 159.814/161.555/163.454/1.560 ms
	PING www.giz.de (193.97.170.57) 524(552) bytes of data.
	532 bytes from vm-topas.giz.de (193.97.170.57): icmp_seq=1 ttl=109 time=161 ms
	532 bytes from vm-topas.giz.de (193.97.170.57): icmp_seq=2 ttl=109 time=160 ms
	532 bytes from vm-topas.giz.de (193.97.170.57): icmp_seq=3 ttl=109 time=160 ms

	--- www.giz.de ping statistics ---
	3 packets transmitted, 3 received, 0% packet loss, time 2000ms
	rtt min/avg/max/mdev = 160.503/160.727/161.173/0.559 ms
	PING www.giz.de (193.97.170.57) 1048(1076) bytes of data0.
	1056 bytes from vm-topas.giz.de (193.97.170.57): icmp_seq=1 ttl=109 time=161 ms
	1056 bytes from vm-topas.giz.de (193.97.170.57): icmp_seq=2 ttl=109 time=161 ms
	1056 bytes from vm-topas.giz.de (193.97.170.57): icmp_seq=3 ttl=109 time=160 ms

	--- www.giz.de ping statistics ---
	3 packets transmitted, 3 received, 0% packet loss, time 2001ms
	rtt min/avg/max/mdev = 160.933/161.095/161.315/0.161 ms
	
	North America (www.cnn.com):
		32 bit packet: 
			Packet Loss: 0%
			Average RTT: 14.907 ms
		524 bit packet: 
			Packet Loss: 0%
			Average RTT: 15.303 ms
		1048 bit packet: 
			Packet Loss: 0%
			Average RTT: 15.474 ms
	
	Asia (baidu.com):
		32 bit packet: 
			Packet Loss: 33%
			Average RTT: 187.462 ms
		524 bit packet: 
			Packet Loss: 0%
			Average RTT: 187.613 ms
		1048 bit packet: 
			Packet Loss: 33%
			Average RTT: 213.190 ms
	
	Europe (www.giz.de):
		32 bit packet: 
			Packet Loss: 0%
			Average RTT: 161.555 ms
		524 bit packet: 
			Packet Loss: 0%
			Average RTT: 160.727 ms
		1048 bit packet: 
			Packet Loss: 0%
			Average RTT: 161.095 ms


Step 4:
	Client clicks on the link until the client receives the object: 143 msecs
	Client clicks on the link until the base object and all 6 additional objects are received from web server at the client: 707 msecs
	n parallel persistent connections: 190 msecs
	2 parallel non-persistent connections: 331 msecs
	3 parallel non-persistent connections: 237 msecs
	4 parallel non-persistent connections: 143 msecs
	5 parallel non-persistent connections: 143 msecs
	6 parallel non-persistent connections: 143 msecs
	>6 parallel non-persistent connections: 143 msecs

Step 5:
	root@GG-AERO:/mnt/c/Users/GBT/Documents/SCU Junior Year/Fall 2020/COEN 146L/Lab2# telnet gaia.cs.umass.edu 80
	Trying 128.119.245.12...
	Connected to gaia.cs.umass.edu.
	Escape character is '^]'.
	GET /kurose_ross/interactive/index.php HTTP/1.1
	Host: gaia.cs.umass.edu

	HTTP/1.1 200 OK
	Date: Fri, 02 Oct 2020 01:51:34 GMT
	Server: Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips PHP/7.4.10 mod_perl/2.0.11 Perl/v5.16.3
	X-Powered-By: PHP/7.4.10
	Transfer-Encoding: chunked
	Content-Type: text/html; charset=UTF-8

	23ad

	<!DOCTYPE HTML>
	<html>
	  <head>
		<title>Interactive Problems, Computer Networking: A Top Down Approach</title>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<link href="https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/lux/bootstrap.min.css" rel="stylesheet" type="text/css"/>
		<link href="custom.css" rel="stylesheet" type="text/css"/>
	  </head>

	  <body>
		<!-- Required scripts for bootstrap to function -->
		<script type="text/javascript" src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
		<script type="text/javascript" src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.bundle.min.js"></script>
		<script type="text/javascript" src="questions.js"></script>
		<!-- This is the navbar -->
		<div class="container fixed-top">
			<nav class="navbar navbar-expand-lg mx-auto mt-2 navbar-light py-2 bg-danger">
					<button class="navbar-toggler mb-1" type="button" data-toggle="collapse" data-target="#navbar-toggle" aria-label="toggle">
							<span class="navbar-toggler-icon"></span>
					</button>
					<div class="collapse navbar-collapse" id="navbar-toggle">
							<ul class="navbar-nav w-100 nav-fill">
									<li class="nav-item">
											<a href="index.php" class="btn btn-outline-primary mt-1 mb-1">Problem Solving Home</a>
									</li>
									<li class="nav-item">
											<a href="nat.php" class="btn btn-outline-primary mt-1 mb-1">Try a Random Problem</a>
									</li>
							</ul>
					</div>
			</nav>
	</div>
	<div class='d-none d-lg-block'>
			<br/>
			<br/>
			<br/>
			<br/>
			<br/>
			<br/>
	</div>
	<div class='d-block d-lg-none'>
			<br/>
			<br/>
			<br/>
			<br/>
	</div>    <!--This container holds the basic information that's on every problem -->
		<div class="container">
		  <h1 class="text-dark-red">Interactive end-of-chapter exercises</h1>
		  <hr>
		  <div class="row">
			<!--Classes define how to render the paragraphs and image based on window size -->
			<div class="col-lg-9 col-md-7 col-sm-6 col-6 mt-5">
			  <p class="larger-fontsize">Supplement to <a href="https://www.pearson.com/us/higher-education/program/Kurose-Computer-Networking-RENTAL-EDITION-8th-Edition/PGM2877610.html">Computer Networking: A Top Down Approach 8th Edition</a></p>
			  <br/>
			  <p class="large-fontsize"><em>&quot;Tell me and I forget. Show me and I remember. Involve me and I understand.&quot; Chinese proverb</em></p>
			</div>
			<div class="col-lg-2 col-md-4 col-sm-6 col-6">
			  <img src="8E_cover_small.jpg" class="img-fluid mt-5 mt-sm-2 mt-md-1" alt="Textbook Cover">
			</div>
		  </div>
		</div>
		<br/>
		<!-- All content / each problem goes in here -->
		<div class="container jumbotron">

	<script>
	$(document).ready(function() {
		var vals = location.search.replace('?', '').split('=');
		if(vals.length > 1) {
		  var vals = vals[1];
		  var questions = vals.split('_');

		  for(var question of questions) { // for each question
			if($('#' + question).length) { // exists
			  if($('#' + question).is("ul")) { // highlight entire chapter
				$('#' + question).children().addClass('highlight');
				question = question.replace('c', 'h');
				$('#' + question).addClass('highlight');
			  }
			  else {
				$('#' + question).addClass('highlight');
			  }
			}
		  }

		  if(questions.length > 0) {
			var q = questions[0];
			if($('#' + q).length) {
			  document.getElementById(q).scrollIntoView({block: 'center'});
			}
		  }

		}
		return;
	});
	</script>

	<p>The links below will take you to end-of-chapter exercises where you'll be presented with an exercise whose solution can then be displayed (hopefully <em>after</em> you've solved the exercise yourself!). Each of the exercises below is similar to an end-of-chapter problem in the text. Most importantly, you can keep generating new instances of each exercise (and hopefully solving each one!) until you've mastered the material.</p>

	<p>
	You may be interested in other supplemental material (online lectures, powerpoint slides, review questions, Wireshark labs) for our book, available <a href="http://gaia.cs.umass.edu/kurose_ross"> here.</a>
	</p>
	<p>  This page replaces the earlier interactive problems page, and includes a number of new problems.  We're actively adding new problems here in the summer of 2020. If you've got any comments or suggestions - let us know at  <a href="mailto:kurose@cs.umass.edu"> kurose@cs.umass.edu </a></p>
	<hr>
	<br/>
	<h5 id='h1'>Chapter 1: Introduction</h5>
	<ul id='c1'>
	  <li id='c1q1'><a href="circuit_switching.php">Circuit Switching</a></li>
	  <li id='c1q2'><a href="ps_versus_cs.php">Quantitative Comparison of Packet Switching and Circuit Switching</a><a> (similar to Chapter 1, P8, P9) </a> </li>
	  <li id='c1q3'><a href="caravan.php">Car - Caravan Analogy</a></li>
	  <li id='c1q4'><a href="one-hop-delay.php">One-hop Transmission Delay</a> (similar to example on pg. 37)</li>
	  <li id='c1q5'><a href="qdelay.php">Queuing Delay</a></li>
	  <li id='c1q6'><a href="end-end-delay.php">End-to-End Delay</a> (similar to Chapter 1, P10)</li>
	  <li id='c1q7'><a href="end-end-throughput-simple.php">End-to-End Throughput</a> (similar to Chapter 1, P20, and Figure 1.20)</li>
	  <li id='c1q8'><a href="layers.php">The IP Stack and Protocol Layering</a></li>
	</ul>
	<br/>
	<h5 id='h2'>Chapter 2: Application Layer</h5>
	<ul id='c2'>
	  <li id='c2q1'><a href="dns.php">DNS - Basics</a></li>
	  <li id='c2q2'><a href="dns_query.php">DNS - Iterative vs Recursive Query</a></li>
	  <li id='c2q3'><a href="DNS_HTTP_delay.php">DNS and HTTP delays</a> (similar to Chapter 2, P7,P8)</li>
	  <li id='c2q4'><a href="http-get.php">HTTP GET</a> (similar to Chapter 2, P4)</li>
	  <li id='c2q5'><a href="http-response.php">HTTP RESPONSE</a> (similar to Chapter 2, P5)</li>
	  <li id='c2q6'><a href="browser_caching.php">Browser Caching</a></li>
	  <li id='c2q7'><a href="smtp.php">Electronic Mail and SMTP</a></li>
	  <li id='c2q8'><a href="CS_vs_P2P_download.php">A comparison of client-server and P2P file distribution delays</a> (similar to Chapter 2, P22)</li>
	</ul>
	<br/>
	<h5 id='h3'>Chapter 3: Transport Layer</h5>
	<ul id='c3'>
	  <li id='c3q1'><a href="internet_checksum.php">Internet checksum</a> (similar to Chapter 3, P3 and P4)</li>
	  <li id='c3q2'><a href="rdt22.php">Reliable data transfer: rdt22</a></li>
	  <li id='c3q3'><a href="tcp_segloss.php">TCP sequence and ACK numbers, with segment loss</a> (similar to Chapter 3, P27)</li>
	  <li id='c3q4'><a href="TCP_RTT.php">TCP RTT and timeout</a> (similar to Chapter 3, P31)</li>
	  <li id='c3q5'><a href="tcp_evolution.php">TCP congestion window evolution</a> (similar to Chapter 3, P40)</li>
	  <li id='c3q6'><a href="tcp_retrans.php">TCP retransmissions (reliable data transmission with ACK loss)</a></li>
	  <li id='c3q7'><a href="UDP_Mux_Demux.php">UDP Mux and Demux</a></li>
	  <li id='c3q8'><a href="TCP_Mux_Demux.php">TCP Mux and Demux</a></li>
	</ul>
	<br/>
	<h5 id='h4'>Chapter 4: Network Layer: Data Plane</h5>
	<ul id='c4'>
	  <li id='c4q1'><a href="nat.php">Network Address Translation</a></li>
	  <li id='c4q2'><a href="longestprefix.php">Longest Prefix Matching</a> (similar to Chapter 4, P9, P10)</li>
	  <li id='c4q3'><a href="subnet_addressing.php">Subnet Addressing</a></li>
	  <li id='c4q4'><a href="ip_tunneling.php">IPv6 Tunneling and Encapsulation</a></li>
	  <li id='c4q5'><a href="scheduling.php">Packet Scheduling</a></li>
	</ul>
	<br/>
	<h5 id='h5'>Chapter 5: Network Layer: Control Plane</h5>
	<ul id='c5'>
	  <li id='c5q1'><a href="dij.php">Dijkstra's Link State Algorithm</a> (similar to Chapter 5, P3)</li>
	  <li id='c5q2'><a href="dij_advanced.php">Dijkstra's Link State Algorithm - Advanced</a></li>
	  <li id='c5q3'><a href="disVector.php">Bellman Ford Distance Vector algorithm</a> (similar to Chapter 5, P5)</li>
	  <li id='c5q4'><a href="openflow.php">Openflow Flow Tables</a></li>
	</ul>
	<br/>
	<h5 id='h6'>Chapter 6: Link Layer</h5>
	<ul id='c6'>
	  <li id='c6q1'><a href="link_layer_addressing.php">Link Layer (and network layer) addressing, forwarding</a> (similar to Chapter 6,  P15)</li>
	  <li id='c6q2'><a href="2d_parity.php">Error Detection and Correction: Two Dimensional Parity</a> (similar to Chapter 6, P1)</li>
	  <li id='c6q3'><a href="CRC.php">Error Detection and Correction: Cyclic Redundancy Check</a> (similar to Chapter 6, P5, P6)</li>
	  <li id='c6q4'><a href="aloha.php">Random Access Protocols: Aloha</a></li>
	  <li id='c6q5'><a href="collisions.php">Random Access Protocols: Collisions</a></li>
	  <li id='c6q6'><a href="learning_switch_basic.php">Learning Switches - Basic</a></li>
	  <li id='c6q7'><a href="learning_switch.php">Learning Switches - Advanced</a></li>
	</ul>
	<br/>
	<h5 id='h7'>Chapter 7: Wireless and Mobile Networks</h5>
	<ul id='c7'>
	  <li id='c7q1'><a href="cdma.php">CDMA - Basic</a></li>
	  <li id='c7q2'><a href="cdma_advanced.php">CDMA - Advanced</a></li>
	  <li id='c7q3'><a href="4g_tunneling.php">4G Wireless Tunneling</a></li>
	  <li id='c7q4'><a href="4g_handover.php">4G Wireless Handover</a></li>
	</ul>



	1ec

		<!-- End of the main container that holds the problem -->
		</div>
		<!-- This container holds the copyright and contact info -->
		<div class="container">
		  <p>We gratefully acknowledge the programming and problem design work of John Broderick (UMass '21),<br/>which has really helped to substantially improve this site.</p>
		  <p> Copyright © 2010-2020 J.F. Kurose, K.W. Ross<br/>Comments welcome and appreciated: kurose@cs.umass.edu<br></p>
		</div>
	  </body>
	</html>
	
	File from GET: index.php
	Version of HTTP: 1.1
	Text: Our textbook and its chapters
	Images: 8E_cover_small.jpg

Step 6:
	North America (www.cnn.com/2020/09/13/us/vertical-harvest-nona-yehia-cfc/index.html):
		File from GET: index.html
		Version of HTTP: 1.1
		Text: Article "It's hard to grow vegetables in this mountain town. Then this farmer had an idea"
		Images: //cdn.cnn.com/cnnnext/dam/assets/200910220948-vertical-harvest-05-medium-plus-169.jpg and other photos
	
	Asia (www.cnn.co.jp/world/35160304.html):
		File from GET: 35160304.html
		Version of HTTP: 1.1
		Text: Article "イラク・クルド人自治区の米軍駐留基地にロケット弾攻撃　シーア派民兵か"
		Images: /storage/2020/10/01/beca97a719ac1bf8bce9dfa7baac4bd0/t/768/432/d/200930183259-erbil-international-airport-file-super-169.jpg and other photos
	
	Europe (www.giz.de/de/mit_der_giz_arbeiten/58288.html):
		File from GET: 58288.html
		Version of HTTP: 1.1
		Text: Article "Klimafreundlicher Kaffee aus Costa Rica"
		Images: /static/de/media/53_Kaffee_Costa_Rica_1_1374x700.jpg and other photos
		
	Took the same steps as step 5 and noted down the outcomes. Using port 3389 didn't work.